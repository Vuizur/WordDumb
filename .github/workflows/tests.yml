name: Tests

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - 'klld/**'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - 'klld/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install calibre on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin

      - name: Install calibre on macOS
        if: matrix.os == 'macos-latest'
        run: brew install calibre

      - name: Install calibre and wget on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install calibre wget
          echo "/C/Program Files/Calibre2" >> $GITHUB_PATH

      - name: Download books
        run: |
          wget https://github.com/xxyzz/WordDumb/files/8822548/books.zip
          unzip books.zip

      - name: Add books to library
        run: |
          mkdir ~/Calibre\ Library
          calibredb add -m ignore --with-library ~/Calibre\ Library *.azw3 *.epub
          rm *.azw3 *.epub books.zip

      - name: Build plugin(Unix)
        if: matrix.os != 'windows-latest'
        run: |
          ./data/dump_lemmas.sh
          zip -r worddumb-${{ github.sha }}.zip * -x@exclude.lst

      - name: Build plugin(Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ./data/dump_lemmas.sh
          7z a -x@exclude.lst -x!.* -tzip worddumb-${{ github.sha }}.zip

      - name: Add plugin
        run: |
          calibre-customize -a worddumb-${{ github.sha }}.zip
          rm worddumb-${{ github.sha }}.zip

      - name: Get calibre python version
        if: matrix.os != 'macos-latest'
        run: echo "CALIBRE_PY=$(calibre-debug -c 'import platform; print(".".join(platform.python_version_tuple()[:2]))')" >> $GITHUB_ENV

      - name: Get macOS python version
        if: matrix.os == 'macos-latest'
        run: echo "MACOS_PY=$(python3 -c 'import platform; print(".".join(platform.python_version_tuple()[:2]))')" >> $GITHUB_ENV

      - name: Restore dependencies and Wikipedia cache(Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v3
        with:
          path: |
            ~/.config/calibre/plugins/worddumb-libs-py${{ env.CALIBRE_PY }}
            ~/.config/calibre/plugins/worddumb-wikimedia
          key: ${{ runner.os }}-${{ hashFiles('data/spacy.json') }}-${{ env.CALIBRE_PY }}

      - name: Restore dependencies and Wikipedia cache(macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Preferences/calibre/plugins/worddumb-libs-py${{ env.MACOS_PY }}
            ~/Library/Preferences/calibre/plugins/worddumb-wikimedia
          key: ${{ runner.os }}-${{ hashFiles('data/spacy.json') }}-${{ env.MACOS_PY }}

      - name: Restore dependencies and Wikipedia cache(Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v3
        with:
          path: |
            ~/AppData/Roaming/calibre/plugins/worddumb-libs-py${{ env.CALIBRE_PY }}
            ~/AppData/Roaming/calibre/plugins/worddumb-wikimedia
          key: ${{ runner.os }}-${{ hashFiles('data/spacy.json') }}-${{ env.CALIBRE_PY }}

      - name: Run test
        run: cd tests && calibre-debug test.py
        env:
          PYTHONWARNINGS: default
          CALIBRE_SHOW_DEPRECATION_WARNINGS: 1

      - name: Upload plugin
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: worddumb-${{ github.sha }}
          path: |
            .
            !.*
            !data/lemmas.json
            !data/add_lemmas.py
            !data/*.sh
            !docs/*
            !tests/*
            !**/__pycache__/*
            !__pycache__/*
            !exclude.lst
            !klld/*
